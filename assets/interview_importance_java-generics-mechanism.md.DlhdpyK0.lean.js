import{_ as t,B as l,o as p,c as e,a7 as a,j as E,a as n,G as h,w as k}from"./chunks/framework.CU6B6cvq.js";const D=JSON.parse('{"title":"Java泛型机制","description":"","frontmatter":{"title":"Java泛型机制","order":8,"pageview":false,"date":"2023-09-06T00:00:00.000Z","comment":false,"breadcrumb":false},"headers":[],"relativePath":"interview/importance/java-generics-mechanism.md","filePath":"interview/importance/java-generics-mechanism.md"}'),d={name:"interview/importance/java-generics-mechanism.md"};function r(g,s,y,o,F,c){const i=l("font");return p(),e("div",null,[s[2]||(s[2]=a("",35)),E("p",null,[s[1]||(s[1]=n("在此之前，我们所使用的泛型都是应用于整个类上。泛型同样可以在类中包含参数化的方法，而方法所在的类可以是泛型类，也可以不是泛型类。也就是说，")),h(i,{size:"5"},{default:k(()=>[h(i,{color:"blue"},{default:k(()=>s[0]||(s[0]=[n("是否拥有泛型方法，与其所在的类是不是泛型没有关系。")])),_:1})]),_:1})]),s[3]||(s[3]=a("",29))])}const u=t(d,[["render",r]]);export{D as __pageData,u as default};
