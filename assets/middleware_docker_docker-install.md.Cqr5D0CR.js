import{_ as a,o as i,c as e,a7 as n}from"./chunks/framework.CU6B6cvq.js";const d=JSON.parse('{"title":"Docker入门安装","description":"","frontmatter":{"title":"Docker入门安装","order":1,"tag":["docker🛥️"],"category":["docker🛥️"],"pageview":false,"date":"2023-12-03T19:25:35.000Z","comment":false,"breadcrumb":false},"headers":[],"relativePath":"middleware/docker/docker-install.md","filePath":"middleware/docker/docker-install.md"}'),t={name:"middleware/docker/docker-install.md"};function l(p,s,h,k,r,o){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="docker-docker入门安装" tabindex="-1">Docker | Docker入门安装 <a class="header-anchor" href="#docker-docker入门安装" aria-label="Permalink to &quot;Docker | Docker入门安装&quot;">​</a></h1><h2 id="_1-前言" tabindex="-1">1.前言 <a class="header-anchor" href="#_1-前言" aria-label="Permalink to &quot;1.前言&quot;">​</a></h2><p>大家好，我是Leo哥🫣🫣🫣，接下来带来一个全新专栏，Docker专栏，让你脱离繁杂的Linux操作，自己也能轻松部署Java程序。本来主要讲一下Docker入门环境配置。好了，话不多说让我们开始吧😎😎😎。</p><h2 id="_2-卸载旧版docker" tabindex="-1">2.卸载旧版Docker <a class="header-anchor" href="#_2-卸载旧版docker" aria-label="Permalink to &quot;2.卸载旧版Docker&quot;">​</a></h2><p>首先如果系统中已经存在旧的Docker，则先卸载：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-client</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-client-latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-common</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-latest-logrotate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-logrotate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    docker-engine</span></span></code></pre></div><h2 id="_3-配置yum仓库" tabindex="-1">3.配置yum仓库 <a class="header-anchor" href="#_3-配置yum仓库" aria-label="Permalink to &quot;3.配置yum仓库&quot;">​</a></h2><p>笔者服务器是 <code>centos 7</code> 环境</p><p>如果CentOS系统内核低于3.10，可以升级软件包及内核，通过 <code>yum update</code> 升级</p><blockquote><p>Linux系统分为两种：</p><ol><li>RedHat系列：Redhat、Centos、Fedora等</li><li>Debian系列：Debian、Ubuntu等</li></ol><p>RedHat系列的包管理工具是<code>yum</code></p><p>Debian系列的包管理工具是<code>apt-get</code></p></blockquote><p>首先要安装一个yum工具</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span></span></code></pre></div><p>开始安装docker的强依赖</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device-mapper-persistent-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lvm2</span></span></code></pre></div><p>安装成功后，执行命令，配置Docker的yum源：</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum-config-manager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre></div><h2 id="_4-安装docker" tabindex="-1">4.安装Docker <a class="header-anchor" href="#_4-安装docker" aria-label="Permalink to &quot;4.安装Docker&quot;">​</a></h2><p>最后，执行命令，安装Docker</p><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd.io</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><h2 id="_5-添加自启动配置" tabindex="-1">5.添加自启动配置 <a class="header-anchor" href="#_5-添加自启动配置" aria-label="Permalink to &quot;5.添加自启动配置&quot;">​</a></h2><p>因为我们是本地虚拟机，不能像云服务器一样无时无刻在运行，所以我们需要配置一下，让他开机自启，省得我们每次打开虚拟机都要打开docker。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动Docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止Docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置开机自启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行docker ps命令，如果不报错，说明安装启动成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><h2 id="_6-配置阿里云镜像加速" tabindex="-1">6.配置阿里云镜像加速 <a class="header-anchor" href="#_6-配置阿里云镜像加速" aria-label="Permalink to &quot;6.配置阿里云镜像加速&quot;">​</a></h2><h3 id="_6-1-注册阿里云账号" tabindex="-1">6.1 注册阿里云账号 <a class="header-anchor" href="#_6-1-注册阿里云账号" aria-label="Permalink to &quot;6.1 注册阿里云账号&quot;">​</a></h3><p>阿里云官网： <a href="https://www.aliyun.com/" target="_blank" rel="noreferrer">https://www.aliyun.com/</a></p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311231526065.png" alt="image-20231123152645907"></p><h3 id="_6-2-开启镜像服务" tabindex="-1">6.2 开启镜像服务 <a class="header-anchor" href="#_6-2-开启镜像服务" aria-label="Permalink to &quot;6.2 开启镜像服务&quot;">​</a></h3><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311231527634.png" alt="image-20231123152747592"></p><p>点击后进入控制台：</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311231529709.png" alt="image-20231123152851462"></p><h3 id="_6-3-配置镜像加速" tabindex="-1">6.3 配置镜像加速 <a class="header-anchor" href="#_6-3-配置镜像加速" aria-label="Permalink to &quot;6.3 配置镜像加速&quot;">​</a></h3><p>找到<strong>镜像工具</strong>下的<strong>镜像加速器</strong>：</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311231530423.png" alt="image-20231123153033393"></p><p>页面向下滚动，即可找到配置的文档说明：</p><p>选择自己Linux对应的版本即可</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311231531268.png" alt="image-20231123153103236"></p><p>具体命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/docker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制内容，注意把其中的镜像加速地址改成你自己的</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/docker/daemon.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;registry-mirrors&quot;: [&quot;https://xxxx.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新加载配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启Docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><h3 id="_6-4-测试" tabindex="-1">6.4 测试 <a class="header-anchor" href="#_6-4-测试" aria-label="Permalink to &quot;6.4 测试&quot;">​</a></h3><p>输入命令测试docker是否安装完毕</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker--version</span></span></code></pre></div><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311231553203.png" alt="image-20231123155308179"></p><h2 id="_7-文章参考" tabindex="-1">7.文章参考 <a class="header-anchor" href="#_7-文章参考" aria-label="Permalink to &quot;7.文章参考&quot;">​</a></h2><ul><li><a href="https://docs.docker.com/engine/install/centos/#install-from-a-package" target="_blank" rel="noreferrer">https://docs.docker.com/engine/install/centos/#install-from-a-package</a></li></ul><h2 id="_8-总结" tabindex="-1">8.总结 <a class="header-anchor" href="#_8-总结" aria-label="Permalink to &quot;8.总结&quot;">​</a></h2><p>以上便是本文的全部内容，本人才疏学浅，文章有什么错误的地方，欢迎大佬们批评指正！我是<strong>Leo</strong>，一个在互联网行业的小白，立志成为更好的自己。</p><p>如果你想了解更多关于<strong>Leo</strong>，可以关注公众号-程序员Leo，后面文章会首先同步至公众号。</p>`,47)]))}const g=a(t,[["render",l]]);export{d as __pageData,g as default};
