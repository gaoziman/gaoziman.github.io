import{_ as i,o as a,c as t,a7 as n}from"./chunks/framework.CU6B6cvq.js";const g=JSON.parse('{"title":"一款简单轻量的自助Git客户端","description":"","frontmatter":{"title":"一款简单轻量的自助Git客户端","order":2,"tag":["服务搭建"],"category":["服务搭建"],"pageview":false,"date":"2024-09-20T14:11:58.000Z","comment":false},"headers":[],"relativePath":"tools/service/recommend-simple-and-lightweight-self-service-git-client.md","filePath":"tools/service/recommend-simple-and-lightweight-self-service-git-client.md"}'),e={name:"tools/service/recommend-simple-and-lightweight-self-service-git-client.md"};function l(h,s,p,k,r,o){return a(),t("div",null,s[0]||(s[0]=[n(`<h1 id="推荐一款简单轻量的自助git客户端-gitea" tabindex="-1">推荐一款简单轻量的自助Git客户端- Gitea <a class="header-anchor" href="#推荐一款简单轻量的自助git客户端-gitea" aria-label="Permalink to &quot;推荐一款简单轻量的自助Git客户端- Gitea&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>大家好，我是Leo哥🫣🫣🫣，本文将介绍如何在linux使用docker安装Gitea实现自托管代码仓库。</p><h2 id="简单介绍" tabindex="-1">简单介绍 <a class="header-anchor" href="#简单介绍" aria-label="Permalink to &quot;简单介绍&quot;">​</a></h2><p>Gitea是一个极易安装，运行非常快速，安装和使用体验良好的自建Git服务。采用Go作为后端语言，这使得只要生成一个可执行程序即可。并且他还支持跨平台，支持Linux、macOS和Windows以及各种架构，除了x86，amd64，还包括ARM和 PowerPC。</p><p>Github地址：<a href="https://link.segmentfault.com/?enc=5x0HAcp06grDYtplONisjA%3D%3D.OnesKe8DjfTve3FRT6GmhgYzxLNQWlZSJHHAbbP0XXT3CxXesA202c%2BzMozaCq7Z" target="_blank" rel="noreferrer">https://github.com/go-gitea/gitea</a></p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><ul><li>支持活动时间线</li><li>支持SSH以及HTTP/HTTPS协议</li><li>支持SMTP、LDAP和反向代理的用户认证</li><li>支持反向代理子路径</li><li>支持用户、组织和仓库管理系统</li><li>支持添加和删除仓库协作者</li><li>支持仓库和组织级别Web钩子（包括Slack集成）</li><li>支持仓库Git钩子和部署密钥</li><li>支持仓库工单（Issue）、合并请求（Pull Request）以及Wiki</li><li>支持迁移和镜像仓库以及它的Wiki</li><li>支持在线编辑仓库文件和Wiki</li><li>支持自定义源的Gravatar和Federated Avatar</li><li>支持邮件服务</li><li>支持后台管理面板</li><li>支持MySQL、PostgreSQL、SQLite3、MSSQL和TiDB（实验性支持）数据库</li><li>支持多语言本地化（21种语言）</li></ul><h2 id="搭建环境和前提" tabindex="-1">搭建环境和前提 <a class="header-anchor" href="#搭建环境和前提" aria-label="Permalink to &quot;搭建环境和前提&quot;">​</a></h2><p><strong>环境说明</strong></p><ul><li><strong>操作系统</strong>：Centos7.9</li><li><strong>Docker Compose</strong>版本：v2.29.1</li><li>MySQL版本：5.7</li><li>Gitea版本：1.2.2</li></ul><p><strong>安装前提</strong></p><p>Gitea 可以使用 MySQL、PostgreSQL、MSSQL、SQLite3 作为数据库存储，如果你对其中某个数据库熟悉可以选择相应的数据库，我选择的是默认的 SQLite3。</p><h2 id="docker-compose-部署gitea" tabindex="-1">Docker Compose 部署Gitea <a class="header-anchor" href="#docker-compose-部署gitea" aria-label="Permalink to &quot;Docker Compose 部署Gitea&quot;">​</a></h2><h3 id="创建目录" tabindex="-1">创建目录 <a class="header-anchor" href="#创建目录" aria-label="Permalink to &quot;创建目录&quot;">​</a></h3><p>创建一个目录用来存放配置文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/software/data/gitea</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/software/data/gitea/config</span></span></code></pre></div><p>然后进入目录创建docker-compose文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/software/data/gitea/config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./docker-compose.yml</span></span></code></pre></div><h3 id="配置文件内容" tabindex="-1">配置文件内容 <a class="header-anchor" href="#配置文件内容" aria-label="Permalink to &quot;配置文件内容&quot;">​</a></h3><p>本示例为最基础的版本，默认使用 SQLite3 初始化数据库，如需其他数据库，请参考<a href="https://docs.gitea.com/zh-cn/installation/install-with-docker" target="_blank" rel="noreferrer">官方文档</a></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  gitea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    external</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  gitea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gitea/gitea:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gitea</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 设置容器的时区为亚洲/上海</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gitea</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./config:/data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/timezone:/etc/timezone:ro</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 如果是openwrt这一行可以</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3000:3000&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2222:22&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    logging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      driver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;json-file&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        max-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10m&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        max-file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span></span></code></pre></div><h3 id="启动容器" tabindex="-1">启动容器 <a class="header-anchor" href="#启动容器" aria-label="Permalink to &quot;启动容器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>查看容器是否正常运行：</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/2024/202409081828814.png" alt="CleanShot 2024-09-08 at 18.28.08@2x"></p><h3 id="访问测试" tabindex="-1">访问测试 <a class="header-anchor" href="#访问测试" aria-label="Permalink to &quot;访问测试&quot;">​</a></h3><p>浏览器里输入 ip + 3000 端口即可看到如下页面：</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/2024/202409081835954.png" alt="CleanShot 2024-09-08 at 18.35.33@2x"></p><h2 id="初始化配置" tabindex="-1">初始化配置 <a class="header-anchor" href="#初始化配置" aria-label="Permalink to &quot;初始化配置&quot;">​</a></h2><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/2024/202409081834655.png" alt="CleanShot 2024-09-08 at 18.31.06@2x"></p><h3 id="登录注册" tabindex="-1">登录注册 <a class="header-anchor" href="#登录注册" aria-label="Permalink to &quot;登录注册&quot;">​</a></h3><p>点击立即安装即可进行注册页面。首先需要注册一个账号。</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/2024/202409081839405.png" alt="CleanShot 2024-09-08 at 18.39.35@2x"></p><p>然后即可进入主页面。</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/2024/202409081840658.png" alt="CleanShot 2024-09-08 at 18.40.21@2x"></p><p>剩下的操作就跟Gitub，Gitee操作类似了，我这里就不过多赘述了。</p><p>以上便是本文的全部内容，本人才疏学浅，文章有什么错误的地方，欢迎大佬们批评指正！我是 <strong>Leo</strong>，一个在互联网行业的小白，立志成为更好的自己。</p><p>如果你想了<strong>解更多</strong>关于<strong>Leo</strong>，可以关注公众号-程序员Leo，后面文章会首先同步至公众号。</p>`,39)]))}const c=i(e,[["render",l]]);export{g as __pageData,c as default};
