import{_ as s,o as i,c as e,a7 as t}from"./chunks/framework.CU6B6cvq.js";const g=JSON.parse('{"title":"前后端传参方式","description":"","frontmatter":{"title":"前后端传参方式","order":7,"category":["报错及Bug"],"tag":["报错及Bug"],"pageview":false,"date":"2023-12-03T19:40:36.000Z","comment":false},"headers":[],"relativePath":"tools/bugs/record-exception-of-inconsistent-parameter-transmission-methods.md","filePath":"tools/bugs/record-exception-of-inconsistent-parameter-transmission-methods.md"}'),n={name:"tools/bugs/record-exception-of-inconsistent-parameter-transmission-methods.md"};function p(r,a,o,h,l,c){return i(),e("div",null,a[0]||(a[0]=[t(`<h1 id="记录一次前后端传参方式不一致异常" tabindex="-1">记录一次前后端传参方式不一致异常 <a class="header-anchor" href="#记录一次前后端传参方式不一致异常" aria-label="Permalink to &quot;记录一次前后端传参方式不一致异常&quot;">​</a></h1><h2 id="_1-前言" tabindex="-1">1.前言 <a class="header-anchor" href="#_1-前言" aria-label="Permalink to &quot;1.前言&quot;">​</a></h2><p>大家好，我是Leo哥🫣🫣🫣，最近在写一个前后端分离案例的demo的时候，一个接口中前端向后端传递的参数方式和后端接收的方式不太一致，出现了问题。具体是啥呢，咱们接着往下聊。好了，话不多说让我们开始吧😎😎😎。</p><h2 id="_2-问题引出" tabindex="-1">2.问题引出 <a class="header-anchor" href="#_2-问题引出" aria-label="Permalink to &quot;2.问题引出&quot;">​</a></h2><p>具体是这样的，听我慢慢道来。</p><p>首先我是先开发完了后端接口，通过Apifox测试之后，再去进行前台Vue脚手架的开发。因为Apifox是接口测试，当时并没有发现什么问题。</p><p>首先看一下我的后台注册接口，这里因为前台注册只需要传入用户名和密码，所以是通过param这种方式进行接收，而不是通过@RequestBody + User对象把其JSON对象转换为Java对象的方式。</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301329905.png" alt="image-20231130132952846"></p><p>反观前端，下面给出我前台user.js中的注册接口，可能我们正常像后端数据，都是按照我这种方式进行传递JSON数据的。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> registerService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">registerData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/user/register&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, registerData)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>可以看出来下图，这里其实这个请求并不会发出，而是在前端直接拦截住了</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301334068.png" alt="image-20231130133426032"></p><p>就是后台是用param来接参数，而你前台则传递的是JSON数据，所以这里是不给通过的。</p><p>但是有的朋友的就问：Leo哥，我记得前台可以通过param传递参数啊。</p><p>没错是可以的，但那个是get请求，我这里后台注册接口是post请求，所以不太行哈。</p><h2 id="_3-解决方案" tabindex="-1">3.解决方案 <a class="header-anchor" href="#_3-解决方案" aria-label="Permalink to &quot;3.解决方案&quot;">​</a></h2><p>没错，其实就是我们今天要介绍的主角-----<code>URLSearchParams</code> 。</p><p>在Vue的渲染函数中给固定的URL添加参数，你可以使用JavaScript中的URLSearchParams对象来构建查询参数，并将其附加到URL上。</p><p>话不多说，直接开干。</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301342363.png" alt="image-20231130134256329"></p><p>只需要new一个<code>URLSearchParams</code>对象，然后把registerData的数据循环添加到参数上，最后传给后台即可。</p><p>现在我们再次验证一下我们的接口，进行注册。</p><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/LeoPic202311301344779.png" alt="image-20231130134452748"></p><p>可以看出，我们成功进行了注册。</p><h2 id="_4-总结" tabindex="-1">4.总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4.总结&quot;">​</a></h2><p>以上便是本文的全部内容，本人才疏学浅，文章有什么错误的地方，欢迎大佬们批评指正！我是<strong>Leo</strong>，一个在互联网行业的小白，立志成为更好的自己。</p><p>如果你想了解更多关于<strong>Leo</strong>，可以关注公众号-程序员Leo，后面文章会首先同步至公众号。</p>`,27)]))}const k=s(n,[["render",p]]);export{g as __pageData,k as default};
