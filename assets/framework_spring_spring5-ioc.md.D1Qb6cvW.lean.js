import{_ as t,B as a,o as k,c as r,j as i,a as n,G as l,a8 as p}from"./chunks/framework.D0fTRY1a.js";const m=JSON.parse('{"title":"SpringIOC编程","description":"","frontmatter":{},"headers":[],"relativePath":"framework/spring/spring5-ioc.md","filePath":"framework/spring/spring5-ioc.md","lastUpdated":null}'),E={name:"framework/spring/spring5-ioc.md"};function d(g,s,c,y,o,b){const e=a("ArticleMetadata"),h=a("bean");return k(),r("div",null,[s[3]||(s[3]=i("h1",{id:"springioc编程",tabindex:"-1"},[n("SpringIOC编程 "),i("a",{class:"header-anchor",href:"#springioc编程","aria-label":'Permalink to "SpringIOC编程"'},"​")],-1)),l(e),s[4]||(s[4]=p("",47)),i("blockquote",null,[i("ol",null,[s[1]||(s[1]=i("li",null,"创建类型",-1)),i("li",null,[s[0]||(s[0]=n("配置文件的配置 applicationContext.xml")),l(h,{id:"person",class:"com.leo.demo01.pojo.Person"})]),s[2]||(s[2]=i("li",null,'通过工厂类，获得对象 ApplicationContext |- ClassPathXmlApplicationContext ApplicationContext ctx = new ClassPathXmlApplicationContext("/applicationContext.xml"); Person person = (Person)ctx.getBean("person");',-1))])]),s[5]||(s[5]=p("",137))])}const F=t(E,[["render",d]]);export{m as __pageData,F as default};
