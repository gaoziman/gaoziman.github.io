import{_ as e,B as n,o as l,c as r,j as i,a as t,G as p,a8 as h}from"./chunks/framework.D0fTRY1a.js";const y=JSON.parse('{"title":"记录一次Docker部署Redis报错","description":"","frontmatter":{"title":"记录一次Docker部署Redis报错","order":2,"category":["报错及Bug"],"tag":["报错及Bug"],"pageview":false,"date":"2023-09-06T00:00:00.000Z","comment":false,"breadcrumb":false},"headers":[],"relativePath":"tools/bugs/redis-reported-an-error-in-Docker-for-online-issues.md","filePath":"tools/bugs/redis-reported-an-error-in-Docker-for-online-issues.md","lastUpdated":null}'),d={name:"tools/bugs/redis-reported-an-error-in-Docker-for-online-issues.md"};function k(o,s,c,E,g,u){const a=n("ArticleMetadata");return l(),r("div",null,[s[0]||(s[0]=i("h1",{id:"记录一次docker部署redis报错",tabindex:"-1"},[t("记录一次Docker部署Redis报错 "),i("a",{class:"header-anchor",href:"#记录一次docker部署redis报错","aria-label":'Permalink to "记录一次Docker部署Redis报错"'},"​")],-1)),p(a),s[1]||(s[1]=h(`<p><strong>原因：</strong> <code>docker部署redis</code>，项目使用redis时，报错nested exception is io.lettuce.core.RedisCommandExecutionException: READONLY （<code>当前redis为只读</code>）</p><h2 id="_1-思路" tabindex="-1">1. 思路 <a class="header-anchor" href="#_1-思路" aria-label="Permalink to &quot;1. 思路&quot;">​</a></h2><p>最开始我的思路是，可能当时是因为Docker部署的Redis，没有什么配置文件相关的配置，导致当前Redis只能读不能写入。</p><h2 id="_2-解决方式" tabindex="-1">2. 解决方式 <a class="header-anchor" href="#_2-解决方式" aria-label="Permalink to &quot;2. 解决方式&quot;">​</a></h2><h3 id="_2-1-进入容器" tabindex="-1">2.1 进入容器 <a class="header-anchor" href="#_2-1-进入容器" aria-label="Permalink to &quot;2.1 进入容器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-2-进入redis客户端" tabindex="-1">2.2 进入Redis客户端 <a class="header-anchor" href="#_2-2-进入redis客户端" aria-label="Permalink to &quot;2.2 进入Redis客户端&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-3-查看redis属性信息" tabindex="-1">2.3 查看Redis属性信息 <a class="header-anchor" href="#_2-3-查看redis属性信息" aria-label="Permalink to &quot;2.3 查看Redis属性信息&quot;">​</a></h3><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202307161542566.png" alt="image-20230716154232437" loading="lazy"></p><p>备注：<code>可看到redis为slave</code>，为从节点，默认为只读</p><h3 id="_2-4-设置redis只读属性为no" tabindex="-1">2.4 设置redis只读属性为no <a class="header-anchor" href="#_2-4-设置redis只读属性为no" aria-label="Permalink to &quot;2.4 设置redis只读属性为no&quot;">​</a></h3><p><img src="https://gaoziman.oss-cn-hangzhou.aliyuncs.com/img/202307161543580.png" alt="image-20230716154315510" loading="lazy"></p><p><strong>重启Redis容器之后,发现问题解决了。</strong></p><h2 id="_3-后续" tabindex="-1">3. 后续 <a class="header-anchor" href="#_3-后续" aria-label="Permalink to &quot;3. 后续&quot;">​</a></h2><blockquote><p>但是第二天发现仍出现了昨天同样的问题，于是觉得这种方式行不通，通过查询资料得知，在服务器安装Redis则必须对外访问<code>ip</code>设置为0.0.0.0，并且Redis必须设置密码</p></blockquote><p>于是删除<code>Docker</code>中的<code>Reids</code>镜像，重新安装Reis，并设置密码访问。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 拉取redis镜像</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 不指定版本号，默认拉取最新版的redis </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker pull redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 指定的版本号 docker pull redis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">14</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查看镜像是否拉取成功docker images</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 运行redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 带密码认证的redis，登录时需要输入验证码  appendonly（redis是否持久化）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name redis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">always redis redis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appendonly yes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirepass </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 不带密码认证的redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker run </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name redis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">always redis redis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appendonly yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>这里一定要选择第一种，Redis持久化，设置密码</strong></p><h2 id="_4-总结" tabindex="-1">4. 总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4. 总结&quot;">​</a></h2><p>OK，到这里问题才完全解决！</p>`,21))])}const m=e(d,[["render",k]]);export{y as __pageData,m as default};
